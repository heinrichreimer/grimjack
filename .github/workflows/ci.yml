name: CI

on:
  push:

jobs:
  latex-paper:
    name: "📄 LaTeX paper"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🏗️ Compile paper"
        uses: xu-cheng/latex-action@v2
        with:
          working_directory: paper
          root_file: touche-2022-answering-comparative-questions-with-axiomatic-reranking-and-query-reformulation.tex
      - name: "📤 Upload paper"
        uses: actions/upload-artifact@v2
        with:
          path: paper/touche-2022-answering-comparative-questions-with-axiomatic-reranking-and-query-reformulation.pdf
          name: latex-paper
  latex-talk:
    name: "📄 LaTeX talk"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🏗️ Compile talk"
        uses: xu-cheng/latex-action@v2
        with:
          working_directory: talk
          root_file: talk.tex
      - name: "📤 Upload talk"
        uses: actions/upload-artifact@v2
        with:
          path: talk/talk.pdf
          name: latex-talk
  python-code-format:
    name: "🔍 Python code format"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Install Python"
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: pipenv
      - name: "🧰 Install pipx"
        run: pip install --user pipx
      - name: "🧰 Install Pipenv"
        run: pipx install pipenv
      - name: "🧰 Install dependencies"
        run: pipenv install --deploy
      - name: "🔍 Check Python code format"
        run: pipenv run flake8 grimjack
  python-lint:
    name: "🔍 Python lint"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Install Python"
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: pipenv
      - name: "🧰 Install pipx"
        run: pip install --user pipx
      - name: "🧰 Install Pipenv"
        run: pipx install pipenv
      - name: "🧰 Install dependencies"
        run: pipenv install --deploy
      - name: "🔍 Lint Python code"
        run: pipenv run pylint -E grimjack
  python-unit-tests:
    name: "🧪 Python tests"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Install Python"
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: pipenv
      - name: "🧰 Install pipx"
        run: pip install --user pipx
      - name: "🧰 Install Pipenv"
        run: pipx install pipenv
      - name: "🧰 Install dependencies"
        run: pipenv install --deploy
      - name: "🧪 Test Python code"
        run: pipenv run pytest grimjack --cov --cov-report=term --cov-report=xml
      - name: "📤 Upload test coverage"
        uses: actions/upload-artifact@v2
        with:
          path: coverage.xml
          name: python-test-coverage
      - name: "📤 Publish test coverage"
        uses: codecov/codecov-action@v1
  docker-build:
    name: "🏗️ Docker build"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Set up QEMU"
        uses: docker/setup-qemu-action@v1
      - name: "🧰 Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1
      - name: "📄 Parse Docker metadata"
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ github.repository }}
      - name: "🏗️ Build Docker image"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: "🏗️ Save Docker image"
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=image.tar
      - name: "📤 Upload Docker image"
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: actions/upload-artifact@v2
        with:
          path: image.tar
          name: docker-image
  release:
    name: "🚀 Create GitHub release"
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - latex-paper
      - latex-talk
      - python-code-format
      - python-lint
      - python-unit-tests
      - docker-build
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "📥 Download paper"
        uses: actions/download-artifact@v2
        with:
          path: touche-2022-answering-comparative-questions-with-axiomatic-reranking-and-query-reformulation.pdf
          name: latex-paper
      - name: "📥 Download talk"
        uses: actions/download-artifact@v2
        with:
          path: talk.pdf
          name: latex-talk
      - name: "📥 Download test coverage"
        uses: actions/download-artifact@v2
        with:
          path: coverage.xml
          name: python-test-coverage
      - name: "📥 Download Docker image"
        uses: actions/download-artifact@v2
        with:
          path: image.tar
          name: docker-image
      - name: "🚀 Create GitHub release"
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get-version.outputs.tag }}
          files: |
            touche-2022-answering-comparative-questions-with-axiomatic-reranking-and-query-reformulation.pdf
            talk.pdf
            coverage.xml
          fail_on_unmatched_files: true
          draft: false
          prerelease: false
          generate_release_notes: true
        
 