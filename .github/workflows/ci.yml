name: CI

on:
  push:

jobs:
  build-latex-paper:
    name: "🏗️ Build LaTeX paper"
    runs-on: ubuntu-20.04
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🏗️ Compile paper"
        uses: xu-cheng/latex-action@v2
        with:
          working_directory: paper
          root_file: sample-1col.tex
      - name: "📤 Upload paper"
        uses: actions/upload-artifact@v2
        with:
          path: paper/sample-1col.pdf
          name: Paper
  build-latex-talk:
    name: "🏗️ Build LaTeX talk"
    runs-on: ubuntu-20.04
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🏗️ Compile talk"
        uses: xu-cheng/latex-action@v2
        with:
          working_directory: talk
          root_file: talk.tex
      - name: "📤 Upload talk"
        uses: actions/upload-artifact@v2
        with:
          path: talk/talk.pdf
          name: Talk
  test-python:
    name: "🧪 Test Python code"
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Install Python"
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: "🧰 Install pipx"
        run: pip install --user pipx
      - name: "🧰 Install Pipenv"
        run: pipx install pipenv
      - name: "🧰 Install dependencies"
        run: pipenv install --deploy
      - name: "🧪 Check Python code format"
        run: pipenv run flake8
      - name: "🧪 Lint Python code"
        run: pipenv run pylint -E grimjack
      - name: "🧪 Test Python code"
        run: pipenv run pytest --cov --cov-report=term --cov-report=xml || true
      - name: "📤 Upload test coverage"
        uses: actions/upload-artifact@v2
        with:
          path: coverage.xml
          name: Python test coverage
      - name: "📤 Publish test coverage"
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
  build-docker:
    name: "🚀 Build Docker image"
    runs-on: ubuntu-20.04
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "📄 Parse Docker metadata"
        id: meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ github.repository }}
          tag-match: "v(.*)"
          tag-match-group: 1
      - name: "🧰 Set up QEMU"
        uses: docker/setup-qemu-action@v1
      - name: "🧰 Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1
      - name: "🚀 Build & push Docker image to GitHub Packages"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}
            org.opencontainers.image.title=Grimjack
            org.opencontainers.image.description=TODO
        
 